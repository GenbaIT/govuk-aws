# This is a snippet so should not have a shebang
# shellcheck disable=SC2148
#
# Snippet: attach-volumes
#

echo "[$(date '+%H:%M:%S %d-%m-%Y')] START SNIPPET: attach-volumes"

# The environment variables INSTANCE_ID and REGION are set
# in the base snippet
#
F_MIGRATION=$(facter aws_migration)
F_STACKNAME=$(facter aws_stackname)
F_HOSTNAME=$(facter aws_hostname)

echo "[$(date '+%H:%M:%S %d-%m-%Y')] attach-volume: find volume ..."
if [[ -z $F_MIGRATION ]] || [[ -z $F_STACKNAME ]] || [[ -z $F_HOSTNAME ]] ; then
  echo "[$(date '+%H:%M:%S %d-%m-%Y')] attach-volume: ERROR facts not found, skipping attach-volume"
else
  VOLUME_ID=$(aws ec2 describe-volumes --region=$REGION --filters "Name=tag:aws_migration,Values=$F_MIGRATION" "Name=tag:aws_hostname,Values=$F_HOSTNAME" "Name=tag:aws_stackname,Values=$F_STACKNAME" --output=json | jq -r '.Volumes[] | .VolumeId ')

  if [[ -z $VOLUME_ID ]] ; then
    echo "[$(date '+%H:%M:%S %d-%m-%Y')] attach-volume: ERROR volume not found"
  fi

  for I in $VOLUME_ID ; do
    DEVICE=$(aws ec2 describe-volumes --region=$REGION --volume-id ${I} | jq -r '.Volumes[].Tags[] | select(.Key=="Device") | .Value ')
    if [[ -z $DEVICE ]] ; then
      DEVICE=xvdf
    fi

    echo "[$(date '+%H:%M:%S %d-%m-%Y')] attach-volume: attaching volume to /dev/$DEVICE ..."
    aws ec2 attach-volume --volume-id ${I} --instance-id $INSTANCE_ID --device /dev/$DEVICE --region $REGION
 
    x=0
    while [[ $x -lt 10 ]]; do
      if ! [[ -e /dev/$DEVICE ]] ; then
        sleep 1
      else
        break
      fi
      x=$((x+1))
    done

    if file -s /dev/$DEVICE | grep -q "/dev/$DEVICE: data"; then
      echo "[$(date '+%H:%M:%S %d-%m-%Y')] attach-volume: /dev/$DEVICE does not contain any partition, Puppet will format the disk"
    else
      echo "[$(date '+%H:%M:%S %d-%m-%Y')] attach-volume: /dev/$DEVICE is already formatted: $(file -s /dev/$DEVICE)"
    fi
  done
fi

echo "[$(date '+%H:%M:%S %d-%m-%Y')] END SNIPPET: attach-volumes"

